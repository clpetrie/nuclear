\documentclass{beamer}
%
% Choose how your presentation looks.
%
% For more themes, color themes and font themes, see:
% http://deic.uab.es/~iblanes/beamer_gallery/index_by_theme.html
%
\mode<presentation>
{
  \usetheme{Warsaw}      % or try Darmstadt, Madrid, Warsaw, ...
  \usecolortheme{default} % or try albatross, beaver, crane, ...
  \usefonttheme{default}  % or try serif, structurebold, ...
  \setbeamertemplate{navigation symbols}{}
  \setbeamertemplate{caption}[numbered]
} 

\usepackage[english]{babel}
\usepackage[utf8x]{inputenc}
\usepackage{amssymb}
\usepackage{bm}
\usepackage{color}
\usepackage{graphicx}

\newcommand{\red}[1]{{\color{red}{#1}}}
\newcommand{\ket}[1]{\left| #1 \right>}
\newcommand{\bra}[1]{\left< #1 \right|}
\newcommand{\braket}[2]{\left< #1 | #2 \right>}
\newcommand{\ketbra}[2]{\left| #1 \right> \left< #2 \right|}
\newcommand{\fpij}{f_p(r_{ij})}
\newcommand{\vpij}{v_p(r_{ij})}
\newcommand{\Opij}{\mathcal{O}_{ij}^p}
\newcommand{\fOpij}{\sum\limits_{i<j}\sum\limits_p \fpij\Opij}
\newcommand{\fqkl}{f_q(r_{kl})}
\newcommand{\Oqkl}{\mathcal{O}_{kl}^q}
\newcommand{\fOqkl}{\sum\limits_{k<l}\sum\limits_q \fqkl\Oqkl}
\newcommand{\fOqklip}{\sum\limits_{k<l,\mathrm{ip}}\sum\limits_q \fqkl\Oqkl}
\newcommand{\fOqklquad}{\sum_{\substack{k<l\\ij \ne kl}}\sum\limits_q \fqkl\Oqkl}
\newcommand{\f}[2]{f_{#1}(r_{#2})}
\renewcommand{\O}[2]{\mathcal{O}_{#2}^{#1}}
\newcommand{\fO}[2]{\sum\limits_{#1} f_{#1}(r_{#2})\mathcal{O}_{#2}^{#1}}
\newcommand{\R}{\mathbf{R}}
\newcommand{\dt}{\Delta\tau}
\newcommand{\ti}{\bm{\tau}_i}
\newcommand{\tj}{\bm{\tau}_j}
\newcommand{\si}{\bm{\sigma}_i}
\newcommand{\sj}{\bm{\sigma}_j}

\title[Prospectus]{Improved Trial Wave Function for Quantum Monte Carlo Calculations of Nuclear Systems}
\author{Cody L. Petrie}
%\institute{Arizona State University}
%\date{}

\begin{document}

\begin{frame}
  \titlepage
\end{frame}

% Uncomment these lines for an automatically generated outline.
\begin{frame}{Outline}
  \tableofcontents
\end{frame}

% Commands to include a figure:
%\begin{figure}
%\includegraphics[width=\textwidth]{your-figure's-file-name}
%\caption{\label{fig:your-figure}Caption goes here.}
%\end{figure}

\section{Motivation}
\begin{frame}{Background}
\begin{itemize}
   \item $\left<\mathcal{O}\right> = \left<\Psi\right|\mathcal{O}\left|\Psi\right> = \int \Psi(\R) \mathcal{O} \Psi^*(\R) d\R$
   \item One of the earliest approximate interactions came from Yukawa.
   \begin{equation}
      V_{Y}(r)=-g^2\frac{e^{-\lambda r}}{r}
   \end{equation}
   \item We use phenomenological potentials like the Argonne potentials.% that also depend on relative spins and isospins, such as the Argonne potentials. Specifically we use the Argonne $v_6$ potential which is a truncation of the Argonne $v_{18}$ potential.
   \begin{equation*}
      v_{ij} = \sum\limits_{p=1,6} v(r_{ij})\O{p}{ij}
   \end{equation*}
   \begin{equation}
      \O{p=1,6}{ij} = 1, \ti\cdot\tj, \si\cdot\sj, (\si\cdot\sj)(\ti\cdot\tj), S_{ij}, S_{ij}(\ti\cdot\tj)
   \end{equation}
   \begin{equation*}
      S_{ij} = 3(\si\cdot\mathbf{r_{ij}})(\sj\cdot\mathbf{r_{ij}})-\si\cdot\sj
   \end{equation*}
\end{itemize}
\end{frame}

\begin{frame}{Background}
   \begin{itemize}
      \item Approximate basis set methods:
      \begin{itemize}
         \item method 1
         \item method 2...
      \end{itemize}
   \end{itemize}
\end{frame}

\section{Research}
\subsection{Quantum Monte Carlo}
\begin{frame}{Monte Carlo Integration}
\begin{itemize}
   \item We often want to solve multidimensional integrals.
      \begin{equation}
         I=\int g(\R)d\R
      \end{equation}
   \item We can rewrite this in terms of a probability distribution $P(\R)$.
      \begin{equation}
         I=\int f(\R)P(\R)d\R
      \end{equation}
   \uncover<2->{
   \item This looks like an expectation value of $f(\R)$. If the $\R_n$'s are pulled from $P(\R)$ then we can write this in discrete form as
   \only<2>{
   \begin{equation}
      I=\lim\limits_{N\rightarrow\infty} \frac{1}{N}\sum\limits_{n=1}^N f(\R_N)
   \end{equation}
   }}
   \uncover<3->{
   \begin{equation}
      I\approx \frac{1}{N}\sum\limits_{n=1}^N f(\R_N)
   \end{equation}
   }
\end{itemize}
\end{frame}

\begin{frame}{Metropolis Algorithm}
\begin{itemize}
   \item We need to draw samples from a probability density. If this is an invertible function this is easy to do.
   \only<1>{
   \begin{columns}
      \begin{column}{0.7\textwidth}
      \begin{figure}[h]
         \centering
         \includegraphics[width=\textwidth]{figures/expr.pdf}
      \end{figure}
      \end{column}
      \begin{column}{0.4\textwidth}
      $r=\log\left(\frac{1}{\xi}\right)$
      \end{column}
   \end{columns}
   }
   \only<2>{
   \begin{columns}
      \begin{column}{0.7\textwidth}
      \begin{figure}[h]
         \centering
         \includegraphics[width=\textwidth]{figures/crazy.pdf}
      \end{figure}
      \end{column}
      \begin{column}{0.4\textwidth}
      Here we need some other method to sample $P(r)$. This is where we use the Metropolis Algorithm.
      \end{column}
   \end{columns}
   }
\end{itemize}
\end{frame}

\begin{frame}{Metropolis Algorithm}
   The Metropolis algorithm is a Markov Chain method that doesn't depend on history except for the previous point.
\begin{enumerate}
   \item Start at a random position, $\R$.
   \uncover<2->{
   \item Propose a move to a new position $\R'$, pulled from a distribution $T(\R'|\R)$, where $T$ can be a Gaussian centered on the current position. %%%This makes sure that too large of steps aren't taken.
   }\uncover<3->{
   \item The probability of accepting the move is given by
   \begin{equation}
      A(\R'|\R) = \frac{P(\R')}{P(\R)}
   \end{equation}
   }\uncover<4->{
   \item If $A\ge1$, then the move is accepted. Otherwise the move is accepted if $A>u$ where $u$ is a uniform random number between 0 and 1.
   }
\end{enumerate}
\end{frame}

\begin{frame}{Variational Monte Carlo}
\begin{itemize}
   \item VMC starts with a trial wave function which includes variable parameters.
   \item The variational principle guarantees
   \begin{equation}
      E_V = \frac{\int\psi_T^*(\R)\hat{H}\psi_T(\R)d\R}{\int\psi_T^*(\R)\psi_T(\R)d\R} \le E_0
   \end{equation}
   \uncover<2->{
   \item To use what we learned above we want this to look like
   \begin{equation}
      E_V = \int P(\R) E_L(\R) d\R
   \end{equation}
   }\uncover<3->{
   \item We can get this if we let $P(\R) = \frac{|\Psi_T(\R)|^2}{\int|\Psi_T(\R)|^2d\R}$ and $E_L(\R) = \Psi_T^{-1}(\R) \hat{H} \Psi_T(\R)$.
   }
\end{itemize}
\end{frame}

\begin{frame}{Variational Monte Carlo}
\begin{itemize}
   \item Now instead of writting, $E_V = \int P(\R) E_L(\R) d\R$ for the variational energy, we can use Monte Carlo integration to write
   \begin{equation}
      E_V \approx \frac{1}{N} \sum\limits_{n=1}^N E_L(\mathbf{R_n}),
   \end{equation}
   where the $\R_n$ are samples from $P(\R)$.
   \item We can then vary the parameters in the trial wave function and calculate this until we minimize the energy, since $E_V \ge E_0$.
\end{itemize}
\end{frame}

\begin{frame}{Variational Monte Carlo - Implementation}
\begin{enumerate}
   \item Generate N configurations (walkers) distributed randomly.
   \item Loop over each walker and do the following
   \begin{enumerate}
      \setlength\itemsep{0.2em}
      \item Calculate $P(\R_i) = \left|\braket{\Psi_T(\R)}{\R_i}\right|^2$
      \item Propose a move $\R' = \R + (\xi-0.5)\Delta$, where $\xi \in U(0,1)$
      \item Calculate $P(\R_i') = \left|\braket{\Psi_T(\R)}{\R_i'}\right|^2$
      \item Calculate the probability of acceptance $A=\frac{P(\R_i')}{P(\R)}$
      \item If accepted then $\R_i \rightarrow \R_i'$, else the next position in the Markov Chain for that walker is the same as the last, namely $\R_i$
   \end{enumerate}
   \item Calculate observables and repeat steps 2 until energy is minimized or uncertainties are low enough.
\end{enumerate}
\end{frame}

\begin{frame}{Auxiliary Field Diffusion Monte Carlo}
\begin{itemize}
   \item Diffusion Monte Carlo uses a Green's function to diffuse walkers in imaginary time to estimate the ground state energy and wave function based on a trial wave function.
   \begin{equation}
      \hat{H}\Psi = i\hbar\frac{d\Psi}{dt} ~ \xrightarrow{\tau=it/\hbar} ~ \hat{H}\Psi = -\frac{d\Psi}{d\tau}
   \end{equation}
   With the solutions
   \begin{equation}
      \Psi(\R,\tau) = \sum\limits_{n=0}^{\infty} c_n\phi_n(\R) e^{-\tau(E_n-E_0)}
   \end{equation}
   \uncover<2->{
   \item The long imaginary time limit of this goes to the ground state.
   \begin{equation}
      \lim\limits_{\tau\rightarrow\infty} \Psi(\R,\tau) = c_0\phi_0(\R)
   \end{equation}
   }
\end{itemize}
\end{frame}

\begin{frame}{Auxiliary Field Diffusion Monte Carlo}
\begin{itemize}
   \item The propagated wave function can be written
   \begin{equation}
      \braket{\R'}{\Psi_T(\tau)} = \int d\R \bra{\R'}e^{-(H-E_0)\tau}\ket{\R}\braket{\R}{\Psi_T(0)}
   \end{equation}
   \item Now break up the propogator into small time steps $\dt = \tau/N$.
   \begin{equation}
      \braket{\R_N}{\Psi_T(\tau)} = \int d\R_1 \ldots d\R_N \left[\prod\limits_{i=1}^N G(\R_i,\R_{i-1},\Delta\tau)\right] \braket{\R_0}{\Psi_t(0)}
   \end{equation}
   \begin{equation}
      G(\R',\R,\Delta\tau) = \bra{\R'}e^{-(H-E_0)\Delta\tau}\ket{\R}
   \end{equation}
\end{itemize}
\end{frame}

\begin{frame}{Auxiliary Field Diffusion Monte Carlo}
\begin{itemize}
   \item In the small $\dt$ limit this propogator can be split up with the kinetic term being used to diffuse the walkers along a random path.
   \begin{equation}
      \bra{\R'}e^{-T\Delta \tau}\ket{\R} = \left(\frac{m}{2\pi\hbar^2\Delta\tau}\right)^{3A/2}e^{-m(\R'-\R)^2/2\hbar^2\Delta\tau}
   \end{equation}
   \uncover<2->{
   \item The potential term can then be used as a weight in a branching algorithm.
   \begin{equation}
      w(\R') = \bra{\R'}e^{-(V-E_0)\Delta\tau}\ket{\R}
   \end{equation}
   }\uncover<3->{
   \item Importance sampling improves the variance of the sampling and can be included with
   \begin{equation}
      G(\R',\R,\Delta\tau) \rightarrow G(\R',\R,\Delta\tau)\frac{\braket{\R}{\Psi_I}}{\braket{\R'}{\Psi_I}}
   \end{equation}
   }
\end{itemize}
\end{frame}

\begin{frame}{Auxiliary Field Diffusion Monte Carlo - Implementation}
\only<2>{
Branching: Each walker can be deleted or multiply. The number of walkers that continues is equal to $\mathrm{int}\left(w(\R')+\xi\right)$, where $\xi$ is a uniform random number from $[0,1]$.
\begin{columns}
\begin{column}{0.4\textwidth}
\begin{figure}
   \includegraphics[width=0.9\textwidth]{figures/branch_full.png}
\end{figure}
\end{column}
\begin{column}{0.7\textwidth}
   {\color{blue}{Figure:}} Reprinted from W.M.C. Foulkes et al. \textit{Rev. Mod. Phys.,} 73:33-83, 2001.
\end{column}
\end{columns}
}
\begin{enumerate}
   \item<1,3> Generate N configurations (walkers) distributed randomly.
   \item<1,3> Loop over each walker and do the following
   \begin{enumerate}
      \setlength\itemsep{0.2em}
      \item<1,3> Propose a move, $\R' = \R + \chi$, where $\chi$ is a random number from the shifted Gaussian $\exp\left(\frac{m}{2\hbar^2\Delta\tau}\left(\R'-\R+2\frac{\nabla\Psi_I(\R')}{\Psi_I(\R')}\right)^2\right)$.
      \item<1,3> The move is then accepted with the probability $A(\R'\leftarrow\R)=\frac{\Psi_T^2(\R')}{\Psi_T^2(\R)}$.
      \item<1,3> For each walker calculate the weight $w(\R')=\exp\left(-\left(\frac{E_L(\R')+E_L(\R)}{2}-E_0\right)\Delta\tau\right)$.
      \item<1,3> Do branching.
      \item<1,3> Calculate and collect the observables and uncertainties needed and increase the imaginary time by $\Delta\tau$.
   \end{enumerate}
   \item<1,3> Repeat from step 2 to 6 until the uncertainties are small enough.
\end{enumerate}
\end{frame}

\begin{frame}{AFDMC - Spin Sampling}
\begin{itemize}
   \item AFDMC samples auxiliary fields to rotate the spins/isospins of the walkers.
   \item The spin/isospin dependent part of the potential is what is used in the spin/isospin dependent part of the propagator.
   \begin{equation}
      G_{SD}(R'S',RS,\dt) = \bra {R'S'}e^{-V_{SD}\dt} \ket{RS}
   \end{equation}
   \begin{equation}
      V_{SD} = \sum\limits_{p=2}^M\sum\limits_{i<j}v_p(r_{ij})\Opij
   \end{equation}
   \item For $v_6$, a truncation of the phenomenoligical Argonne $v_18$ potential, the operators are $\si\cdot\sj$, $\ti\cdot\tj$, $\si\cdot\sj \ti\cdot\tj$, $S_{ij}$ and $S_{ij} \ti\cdot\tj$, where $S_{ij} = 3\si\cdot\hat{r}_{ij}\sj\cdot\hat{r}_{ij}-\si\cdot\sj$
\end{itemize}
\end{frame}

\begin{frame}{AFDMC - Spin Sampling}
\begin{itemize}
   \item The potential can be written in terms of matricies that are made of the $v_p(r_{ij}$, are symmetric, and 0 if $i=j$.
   \begin{equation}
      V_{SD} = \frac{1}{2}\sum\limits_{i\alpha j\beta} \sigma_{i\alpha}A^{\sigma}_{i\alpha j\beta}\sigma_{j\beta}
      + \frac{1}{2}\sum\limits_{i\alpha j\beta} \sigma_{i\alpha}A^{\sigma\tau}_{i\alpha j\beta}\sigma_{j\beta}\ti\cdot\tj
      + \frac{1}{2}\sum\limits_{ij} A^{\tau}_{ij}\ti\cdot\tj
   \end{equation}
   \item We can construct these matricies and then solve for their eigenvalues and eigenvectors.
\begin{align}
   &\sum\limits_{j\beta} A^{\sigma}_{i\alpha j\beta}\psi^{\sigma}_{nj\beta} = \lambda^{\sigma}_n\psi^{\sigma}_{ni\alpha} \\
   &\sum\limits_{j\beta} A^{\sigma\tau}_{i\alpha j\beta}\psi^{\sigma\tau}_{n j\beta} = \lambda^{\sigma\tau}_n\psi^{\sigma\tau}_{ni\alpha} \\
   &\sum\limits_{j} A^{\tau}_{ij}\psi^{\tau}_{n,j} = \lambda^{\tau}_n\psi^{\tau}_{ni}
\end{align}
\end{itemize}
\end{frame}

\begin{frame}{AFDMC - Spin Sampling}
\begin{itemize}
   \item The potential can then be written in terms of the square of new single particle operators.
   \begin{equation}
      V_{SD} = \frac{1}{2}\sum\limits_{n=1}^{3A} \left(O_{n}^{\sigma}\right)^2 \lambda_n^{\sigma}
      + \frac{1}{2}\sum\limits_{\alpha=1}^{3}\sum\limits_{n=1}^{3A} \left(O_{n\alpha}^{\sigma\tau}\right)^2 \lambda_n^{\sigma\tau}
       + \frac{1}{2}\sum\limits_{\alpha=1}^{3}\sum\limits_{n=1}^{A} \left(O_{n\alpha}^{\tau}\right)^2 \lambda_n^{\tau}
   \end{equation}
   \begin{equation}
   \begin{split}
      O_{n}^{\sigma} &= \sum\limits_{j\beta} \sigma_{j\beta}\psi_{nj\beta}^{\sigma} \\
      O_{n\alpha}^{\sigma\tau} &= \sum\limits_{j\beta} \tau_{j\alpha}\sigma_{j\beta}\psi_{nj\beta}^{\sigma\tau} \\
      O_{n\alpha}^{\tau} &= \sum\limits_{j} \tau_{j\alpha}\psi_{nj}^{\tau}
   \end{split}
   \end{equation}
\end{itemize}
\end{frame}

\begin{frame}{AFDMC - Spin Sampling}
\begin{itemize}
   \item Since we have squared single particle operators in the propagator we can now rewrite the propagator in terms of the Hubbard-Stratanovich transformation.
   \begin{equation}
      e^{-\frac{1}{2}\lambda\hat{O}^2} = \frac{1}{\sqrt{2\pi}} \int dx e^{-\frac{x^2}{2} + \sqrt{-\lambda}x\hat{O}}
   \end{equation}
   \item Since we have 15A operators ($3A$ for $O_{n}^{\sigma}$, $9A$ for $O_{n\alpha}^{\sigma\tau}$, and $3A$ for $O_{n\alpha}^{\tau}$), the spin-isospin dependant part of the propagator becomes
   \begin{equation}
      G_{SD}(R'S',RS,\dt) = \prod\limits_{n=1}^{15A}\frac{1}{\sqrt{2\pi}}\int dx_n e^{-\frac{x_n^2}{2}}e^{\sqrt{-\lambda_n\dt} x_nO_n}.
   \end{equation}
\end{itemize}
\end{frame}

\subsection{Trial Wave Function}
\begin{frame}{Slater Determinant}
\begin{itemize}
   \item The simplest wave function for a many-fermion system is a Slater determinant.
   \begin{equation}
      \psi_{T} = \mathcal{A} \prod\limits_{i=1}^A \phi_i(\mathbf{r}_i,s_i) = \frac{1}{A!} \mathrm{det}~\phi_i(\mathbf{r}_i,s_i)
   \end{equation}
   \item Short range correlations need to be put in by hand via Jastrow-like correlations.
   \begin{equation}
      \ket{\psi_T} = \prod\limits_{i<j}f(r_{ij}) \ket{\phi}
   \end{equation}
   \item A completely cluster decomposable ($\ket{A+B} = \ket{A}\ket{B}$) set of spin-isospin dependent correlations could be
   \begin{equation}
       \ket{\psi_T} = \prod\limits_{i<j}f_c(r_{ij}) e^{\sum\limits_p\fpij\Opij} \ket{\phi}.
   \end{equation}
\end{itemize}
\end{frame}

\begin{frame}{Expand The Exponential Correlations}
\begin{itemize}
   \item If we assume the correlations are small we can expand this exponential to first order.
   \begin{equation}
      \ket{\psi_T} = \prod\limits_{i<j}f_c(r_{ij}) \left(1+\sum\limits_p\fpij\Opij\right) \ket{\phi}
   \end{equation}
   \only<1>{
      \item By expanding the product you can write this as
      \begin{equation}
      \begin{split}
         \ket{\psi_T} &= \left[\prod\limits_{i<j}f_c(r_{ij})\right] \left[1+\fOpij\right. \\
         & + \left.\frac{1}{2}\fOpij\fOqklquad + \ldots \right] \ket{\phi}
      \end{split}
      \end{equation}
   }\only<2>{
      \item Or it can be expanded to get independent pair terms
      \begin{equation}
      \begin{split}
         \ket{\psi_T} &= \left[\prod\limits_{i<j}f_c(r_{ij})\right] \left[1+\fOpij\right. \\
         & + \left.\fOpij\fOqklip + \ldots \right] \ket{\phi}
      \end{split}
      \end{equation}
   }
\end{itemize}
\end{frame}

\subsection{Results}
\begin{frame}{Results}
\begin{figure}[h]
   \centering
   \includegraphics[width=0.5\textwidth]{figures/energiesip.eps}
\end{figure}
\begin{table}[h!]
   \centering
   \begin{tabular}{ccccc}
      \hline \hline
       & Linear & IndPair & Quadratic & Expt.\\
      \hline
      $^4$He & -27.0(3) & -26.3(3) & -28.5(2) & -28.295\\
      $^{16}$O & -114(3) & -132(3) & -143.3(3) & -127.619\\
      SNM($\rho=0.16$ fm$^{-1}$) & -14.3(2) & -16.6(2) & \red{???} & \\
      \hline \hline
   \end{tabular}
   \\ SNM: 28 particles with periodic BC, energy per particle.
\end{table}
\end{frame}

\begin{frame}{Results}
\begin{figure}[h]
   \centering
   \includegraphics[width=0.7\textwidth]{figures/oxtrans.pdf}
\end{figure}
Calculation for $^{16}$O with no constrains on the fermi sign problem.
\end{frame}

\begin{frame}{Results}
\begin{figure}[h]
   \centering
   \includegraphics[width=0.7\textwidth]{figures/scaling.eps}
\end{figure}
\begin{table}[h!]
   \centering
   \begin{tabular}{cccc}
      \hline \hline
       & $^{4}$He & $^{16}$O & SNM(28)\\
      \hline
      Scaling & 4.0 & 109.3 & 220.6 \\
      \hline \hline
   \end{tabular}
\end{table}
\end{frame}

\section{Conclusion/Outlook}
\subsection{Outlook}
\begin{frame}{Outlook}
\begin{itemize}
   \item Another way to improve the trial wave function is to start with the exponential correlations and use the Hubbard-Stratanovich transformation to sample them, just like we do for the spin-isospin part of the propagator in AFDMC.
   \begin{equation}
       \ket{\psi_T} = \prod\limits_{i<j}f_c(r_{ij}) e^{\sum\limits_p\fpij\Opij} \ket{\phi}.
   \end{equation}
   \red{Explain this more later.}
\end{itemize}
\end{frame}

\begin{frame}{Particle Clustering in Nuclear Matter}
\begin{itemize}
   \item
\end{itemize}
\end{frame}

\end{document}
